class Map {

    // creation array with length N * N, which contains 1 as wall and 0 as space
    // class have only methods to take (x, y) item, array length and map

    field int size;
    field Array map;

    constructor Map new(int initSize) {
        var int i, checkValue, remainder;

        let size = initSize;
        let map = Array.new(size * size);
        let checkValue = size * size - size - 1;

        let i = 0;
        while (i < (size * size)) {
            let remainder = MathUtils.remainder(i, size);

            if ((i < size) | (i > checkValue) | (remainder = 0) | (remainder = (size -  1))) {
                let map[i] = 1;
            }
            else {
                let map[i] = 0;
            }

            let i = i + 1;
        }

        return this;
    }
    
    method int getItem(int x, int y) {
        return map[y * size + x];
    }

    method int getSize() {
        return size;
    }

    method Array getMap() {
        return map;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}