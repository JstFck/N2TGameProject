class Pacman {
    field Point location;
    field Point currentMovementOffset;
    field int size, step;
    field Map map;

    constructor Pacman new(Point loc, Map newMap) {
        let location = loc;
        let currentMovementOffset = Point.new(0, 0);
        let size = 8;
        let step = 16;
        let map = newMap;
        
        return this;
    }

    method void draw() {
        do Screen.setColor(true);
        do Screen.drawCircle(location.x(), location.y(), size);
        return;
    }

    method void move() {
        var int newX, newY;
        // сначала стираем рисунок на старой позиции
        do Screen.setColor(false);
        do Screen.drawCircle(location.x(), location.y(), size);
        
        let newX = location.x() + currentMovementOffset.x();
        let newY = location.y() + currentMovementOffset.y();

        if (map.getItemByScreenCoords(newX, newY) = 0) {
            do location.dispose(); 
            let location = Point.new(newX, newY);
        }
        
        return;
    }

    method void changeMove(int keyCode) {
        if (keyCode = Keys.keyLeft()) {  // влево
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(-step, 0);
            do move();
        }
        if (keyCode = Keys.keyUp()) {  // вверх
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(0, -step);
            do move();
        }
        if (keyCode = Keys.keyRight()) {  // вправо
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(step, 0);
            do move();
        }
        if (keyCode = Keys.keyDown()) {  // вниз
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(0, step);
            do move();
        }
        return;
    }

    method Point getCurrentLocation() {
        return location;
    }
}