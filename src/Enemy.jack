class Enemy {
    field Point location, currentMovementOffset, playerLocation;
    field Array ghost;
    field int step;
    field Map map;

    constructor Enemy new(Point loc, Map newMap) {
        let location = loc;
        let currentMovementOffset = Point.new(0, 0);
        let step = 16;
        let map = newMap;
        let ghost = Models.ghost();

        return this;
    }

    method void draw(boolean drawOrNot) {
        var int i, j;
        var String currentString;

        do Screen.setColor(drawOrNot);

        let i = 0;
        while (i < 14) {
            let j = 0;
            let currentString = ghost[i];
            while (j < 14) {
                if (currentString.charAt(j) = Ascii.one()) {
                    do Screen.drawPixel(location.x() + 1 + j, location.y() + 1 + i);
                }
                let j = j + 1;
            }
            let i = i + 1;
        }

        do ghost.dispose();
        do currentString.dispose();

        return;
    }
    
    method void getPlayerLocation(Pacman pacman) {
        let playerLocation = pacman.getCurrentLocation();
        return;
    }

    method boolean isPlayerCatch() {
        if (
            ((location.x() / 16) = (playerLocation.x() / 16)) &
            ((location.y() / 16) = (playerLocation.y() / 16))
        ) {
            return true;
        }
        return false;
    }

    method void moveToPlayer() {
        var int newX, newY;

        do draw(false);
        
        let newX = location.x() + currentMovementOffset.x();
        let newY = location.y() + currentMovementOffset.y();

        if (map.getItemByScreenCoords(newX, newY) = 0) {
            do location.dispose(); 
            let location = Point.new(newX, newY);
        }
        
        return;
    }

    method void setDirection() {
        do currentMovementOffset.dispose();
        if (location.x() > playerLocation.x()) {
            let currentMovementOffset = Point.new(-step, 0);
        }
        if (location.y() > playerLocation.y()) {
            let currentMovementOffset = Point.new(0, -step);
        }
        if (location.x() < playerLocation.x()) {
            let currentMovementOffset = Point.new(step, 0);
        }
        if (location.y() < playerLocation.y()) {
            let currentMovementOffset = Point.new(0, step);
        }
        do moveToPlayer();
        return;
    }
}