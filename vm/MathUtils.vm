function MathUtils.remainder 0
    push argument 0
    push argument 0
    push argument 1
    call Math.divide 2
    push argument 1
    call Math.multiply 2
    sub
    return
function MathUtils.pi 0
    push constant 3
    push constant 141
    call Fraction.new 2
    return
function MathUtils.factorial 1
    push constant 1
    pop local 0
label MathUtils_0
    push argument 0
    push constant 1
    gt
    not
    if-goto MathUtils_1
    push local 0
    push argument 0
    call Math.multiply 2
    pop local 0
    push argument 0
    push constant 1
    sub
    pop argument 0
    goto MathUtils_0
label MathUtils_1
    push local 0
    return
function MathUtils.pow 1
    push argument 1
    push constant 0
    eq
    not
    if-goto MathUtils_3
    push constant 1
    push constant 0
    call Fraction.new 2
    return
    goto MathUtils_2
label MathUtils_3
label MathUtils_2
    push argument 0
    call Fraction.integer 1
    push argument 0
    call Fraction.fraction 1
    call Fraction.new 2
    pop local 0
label MathUtils_4
    push argument 1
    push constant 1
    gt
    not
    if-goto MathUtils_5
    push local 0
    push argument 0
    call Fraction.multiply 2
    pop local 0
    push argument 1
    push constant 1
    sub
    pop argument 1
    goto MathUtils_4
label MathUtils_5
    push local 0
    return
function MathUtils.sin 4
    push argument 0
    call Fraction.integer 1
    push argument 0
    call Fraction.fraction 1
    call Fraction.new 2
    pop local 0
    push argument 0
    push constant 3
    call MathUtils.pow 2
    pop local 1
    push local 1
    push constant 3
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 1
    push argument 0
    push constant 5
    call MathUtils.pow 2
    pop local 2
    push local 2
    push constant 5
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 2
    push argument 0
    push constant 7
    call MathUtils.pow 2
    pop local 3
    push local 3
    push constant 7
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 3
    push local 0
    push local 1
    call Fraction.minus 2
    pop local 0
    push local 0
    push local 2
    call Fraction.add 2
    pop local 0
    push local 0
    push local 3
    call Fraction.minus 2
    pop local 0
    push local 0
    return
function MathUtils.cos 4
    push constant 1
    push constant 0
    call Fraction.new 2
    pop local 0
    push argument 0
    push constant 2
    call MathUtils.pow 2
    pop local 1
    push local 1
    push constant 2
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 1
    push argument 0
    push constant 4
    call MathUtils.pow 2
    pop local 2
    push local 2
    push constant 4
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 2
    push argument 0
    push constant 6
    call MathUtils.pow 2
    pop local 3
    push local 3
    push constant 6
    call MathUtils.factorial 1
    call Fraction.integerDivide 2
    pop local 3
    push local 0
    push local 1
    call Fraction.minus 2
    pop local 0
    push local 0
    push local 2
    call Fraction.add 2
    pop local 0
    push local 0
    push local 3
    call Fraction.minus 2
    pop local 0
    push local 0
    return
function MathUtils.sqrt 4
    push argument 0
    call Fraction.integer 1
    push constant 0
    eq
    push argument 0
    call Fraction.fraction 1
    push constant 0
    eq
    and
    not
    if-goto MathUtils_7
    push constant 0
    push constant 0
    call Fraction.new 2
    return
    goto MathUtils_6
label MathUtils_7
label MathUtils_6
    push constant 4
    pop local 3
    push constant 1
    push constant 0
    call Fraction.new 2
    pop local 1
label MathUtils_8
    push local 3
    push constant 0
    gt
    not
    if-goto MathUtils_9
    push argument 0
    call Fraction.integer 1
    push argument 0
    call Fraction.fraction 1
    call Fraction.new 2
    pop local 2
    push local 2
    push local 1
    call Fraction.divide 2
    pop local 0
    push local 1
    push local 0
    call Fraction.add 2
    pop local 1
    push local 1
    push constant 2
    call Fraction.integerDivide 2
    pop local 1
    push local 3
    push constant 1
    sub
    pop local 3
    goto MathUtils_8
label MathUtils_9
    push local 1
    return