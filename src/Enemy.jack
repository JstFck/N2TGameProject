class Enemy {
    field Point location, currentMovementOffset, playerLocation;
    field Array ghost;
    field int step;
    field Map map;

    constructor Enemy new(Point loc, Map newMap) {
        let location = loc;
        let currentMovementOffset = Point.new(0, 0);
        let step = 16;
        let map = newMap;

        let ghost = Array.new(14);
        let ghost[0]  = "00111111001111";
        let ghost[1]  = "01111111111111";
        let ghost[2]  = "01111111111111";
        let ghost[3]  = "01111111111111";
        let ghost[4]  = "01101111110110";
        let ghost[5]  = "01101111110110";
        let ghost[6]  = "01111111111111";
        let ghost[7]  = "01111111111111";
        let ghost[8]  = "01111111111111";
        let ghost[9]  = "01111111111111";
        let ghost[10] = "01110110111011";
        let ghost[11] = "01101001010011";
        let ghost[12] = "01110110111011";
        let ghost[13] = "01111111111111";

        return this;
    }

    method void draw(boolean drawOrNot) {
        var int i, j;
        var String currentString;

        do Screen.setColor(drawOrNot);

        let i = 0;
        while (i < 14) {
            let j = 0;
            let currentString = ghost[i];
            while (j < 14) {
                if (currentString.charAt(j) = 49) {
                    do Screen.drawPixel(location.x() + 1 + j, location.y() + 1 + i);
                }

                let j = j + 1;
            }

            let i = i + 1;
        }

        do ghost.dispose();
        do currentString.dispose();

        return;
    }
    
    method void getPlayerLocation(Pacman pacman) {
        let playerLocation = pacman.getCurrentLocation();
        return;
    }

    method boolean isPlayerCatch() {
        if (
            ((location.x() / 16) = (playerLocation.x() / 16)) &
            ((location.y() / 16) = (playerLocation.y() / 16))
        ) {
            return true;
        }
        return false;
    }

    method void moveToPlayer() {
        var int newX, newY;

        do draw(false);
        
        let newX = location.x() + currentMovementOffset.x();
        let newY = location.y() + currentMovementOffset.y();

        if (map.getItemByScreenCoords(newX, newY) = 0) {
            do location.dispose(); 
            let location = Point.new(newX, newY);
        }
        
        return;
    }

    method void changeMove() {
        if (location.x() > playerLocation.x()) {  // влево
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(-step, 0);
            do moveToPlayer();
        }
        if (location.y() > playerLocation.y()) {  // вверх
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(0, -step);
            do moveToPlayer();
        }
        if (location.x() < playerLocation.x()) {  // вправо
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(step, 0);
            do moveToPlayer();
        }
        if (location.y() < playerLocation.y()) {  // вниз
            do currentMovementOffset.dispose();
            let currentMovementOffset = Point.new(0, step);
            do moveToPlayer();
        }
        return;
    }
}